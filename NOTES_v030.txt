
OVERALL
-- new targets: xna reach, html5, opengl2.0
-- shaders
-- vertex buffers are interleaved now

TMODELLOADERS
-- found an "error" where all loaded models were being rendered twice, some three times... hmmm... should notice a speedup.


TCAMERA
-- fog mode 3 modes. 1 linear, 2 exp, 3, exp squared. range has an effect on the location and length of the fog for all 3. it is a vertex fog, not per pixel.

TEntity
-- PaintEntity() for shaders, keeps old brush info (textures, color, etc). (leads to the question, why even have shaders as a tbrush?)

TMESH
-- CopyMesh()
Now more robust, copies animation as well. Use AddMesh() for merging just vertices.

-- AddSurface(surf)
Adds existing surface to mesh.

-- CreateGrid(x,y)
Creates a grid of x-width,y-depth of 1x1 interlinked quads. could be used for heightmaps.

-- SetNormalMapping()
Sets up normap mapping. Technically creates a tangent normal and stores in the color uniform. Implemented in shaders (not opengl1.1).


TTEXTURE
-- texture fx_flag & 1024  = normal mapping flag, must be in texture0

QUATERNION
-- i have a suspicion one of these equations is wrong. need unit testing


-- XNA
XNA is reach profile, should work on mobile. No point lights, spotlight, light attenuation. No multi textures.
works with VBOs only.

vertex animation copies the buffer, this can be slow, but it may not always be the slowness factor.

I've noticed odd slowing factors at around 100 zombies (1 fps)  compared to 80 (30 fps) . very strange.

-- OpenGL1.1
Works with VBOs only since we are using interleaved arrays.

-- OpenGL2.0
Works with VBOs only since we are using interleaved arrays.
I've placed some default shaders for people to use:
BlurShader
FastBrightShader (full light, 1 or 2 textures)
FullShader (1 light, 4 textures, very slow on android)

I didn't implement masked textures since I have alpha blending, let me know if needed.

-- HTML5
recommended to use PreLoad() for textures, or will get errors on asynchronous loads from web.



-- Shaders
the pmatrix is fed a Proj*view matrix. I don't feed a separate proj matrix, but i have a separate view and model matrix.
I work with my shaders in world coords. (which is why the camera is a pv matrix)


-- IShaderEntity
. class to apply per entity shaders
. 

